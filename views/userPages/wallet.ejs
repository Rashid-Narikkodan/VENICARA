<%- include('../partials/user/header.ejs') %> 
<%- include('../partials/user/sidebarProfile.ejs') %>

<style>
  .wallet-card {
    max-width: 600px; /* keeps it neat on large screens */
    width: 100%;      /* full width on mobile */
    max-height: fit-content;
  }
  .add-input {
    border: none;
    text-align: center;
    padding: 1.2rem 0;
    font-size: 22px;
    font-weight: bolder;
    background: rgb(240, 240, 240);
    width: 100%; /* stretches input */
  }
  .add-input:focus-visible {
    outline: none !important;
  }

  /* tweak buttons for mobile */
  .preset-btn {
    margin: 0.25rem;
    min-width: 80px;
  }
</style>

<main class="w-100 min-vh-100 d-flex justify-content-center px-md-2 p-0">
  <div class="card rounded-4 p-4 shadow wallet-card">
    <div class="row g-3">
      <div class="col-12 text-center">
        <p class="fs-3 fw-bold mt-1">MY WALLET</p>
      </div>

      <!-- BALANCE -->
      <div class="col-12 rounded-3 p-3 border bg-light">
        <span class="fs-6 fw-bold">TOTAL BALANCE</span>
        <hr class="my-2" />
        <span class="d-flex justify-content-between align-items-center">
          <span class="fs-6 fw-semibold">WALLET</span>
          <span class="text-success fs-4 fw-semibold" id="balance">₹<%=Math.round(wallet?.balance)%></span>
        </span>
      </div>

      <!-- ADD MONEY -->
      <div class="col-12 rounded-3 p-3 border bg-light">
        <span class="fs-6 fw-bold">ADD TO WALLET</span>
        <hr class="my-2" />
        <form id="walletForm" action="#" method="POST">
          <div class="text-center p-1">
            <input
              type="text"
              id="amount"
              name="amount"
              class="add-input rounded-3"
              value="₹"
              maxlength="10"
              placeholder="Amount"
            />
          </div>

          <div class="text-center p-2 d-flex flex-wrap justify-content-center">
            <button type="button" class="btn btn-outline-dark preset-btn" data-value="100">₹100</button>
            <button type="button" class="btn btn-outline-dark preset-btn" data-value="200">₹200</button>
            <button type="button" class="btn btn-outline-dark preset-btn" data-value="500">₹500</button>
          </div>

          <div class="text-center p-2">
            <button type="submit" class="btn btn-dark fw-bold w-100">ADD MONEY</button>
          </div>
        </form>
      </div>

      <!-- TRANSACTIONS -->
      <div class="col-12 text-center">
        <a href="/wallet/history" class="btn btn-primary px-4 fw-semibold w-100">Show Transaction History</a>
      </div>
    </div>
  </div>


  <!-- //payment failed modal -->
  <div class="modal fade" id="paymentFailedModal" tabindex="-1" aria-labelledby="paymentFailedLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content border-danger">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="paymentFailedLabel">Payment Failed</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p id="paymentFailedMessage">Your payment could not be processed. Please try again.</p>
      </div>
      <div class="modal-footer">
        <button type="button" id="retry" class="btn btn-outline-danger" >Retry</button>
        <button type="button" class="btn btn-danger" onclick="window.location.reload()">Close</button>
      </div>
    </div>
  </div>
</div>


<!-- ///payment Success -->
<div class="modal fade" id="paymentSuccessModal" tabindex="-1" aria-labelledby="paymentSuccessLabel" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered">
  <div class="modal-content border-success">
    <div class="modal-header bg-success text-white">
      <h5 class="modal-title" id="paymentSuccessLabel">Payment Successful</h5>
      <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
      <p id="paymentSuccessMessage"></p>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-success" onclick="window.location.reload()">OK</button>
    </div>
  </div>
</div>
</div>


</main>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  // #1: Setup Input Formatting (₹ prefix + numeric only)
  function setupAmountInput() {
    const input = document.getElementById("amount");
    input.addEventListener("input", () => {
      const value = input.value.replace(/₹/g, "").replace(/[^0-9]/g, "");
      input.value = "₹" + value;
    });
  }

    // Function to show payment failed modal
function showPaymentFailedModal(message = "Your payment could not be processed. Please try again.") {
  const modalEl = document.getElementById("paymentFailedModal");
  const messageEl = document.getElementById("paymentFailedMessage");
  messageEl.textContent = message;

  const modal = new bootstrap.Modal(modalEl);
  modal.show();
}

function showPaymentSuccessModal(message = "Payment successfully completed") {
  const modalEl = document.getElementById("paymentSuccessModal");
  const messageEl = document.getElementById("paymentSuccessMessage");
  messageEl.textContent = message;

  const modal = new bootstrap.Modal(modalEl);
  modal.show();
}
  // #2: Setup Preset Amount Buttons (e.g., ₹100, ₹200)
  function setupPresetButtons() {
    const input = document.getElementById("amount");
    document.querySelectorAll(".preset-btn").forEach((btn) => {
      btn.addEventListener("click", () => {
        input.value = "₹" + btn.dataset.value;
      });
    });
  }

  // #3: Validate Amount Field
  function validateAmount(value) {
    if (!value || isNaN(value) || parseInt(value) <= 0) {
      showPaymentFailedModal("Please enter a valid amount.");
      return false;
    }
    return true;
  }

  // #4: Create Razorpay Order (Backend API)
  async function createRazorpayOrder(amountValue) {
    try {
      const res = await fetch("/wallet/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount: amountValue }),
      });
      const { order } = await res.json();
      if (!order || !order.id || order.status !== "created") {
        showPaymentFailedModal("Failed to create order. Try again.");
        return null;
      }
      return order;
    } catch (err) {
      console.error(err);
      showPaymentFailedModal("Error creating order. Try again later.");
      return null;
    }
  }

  // #5: Verify Payment After Razorpay Success
  async function verifyPayment(response) {
    try {
      const res = await fetch("/wallet/verify-payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(response),
      });
      const data = await res.json();
      if (data.status) {
        document.getElementById("balance").textContent = `₹${data.balance}`;
        showPaymentSuccessModal("Wallet balance updated successfully!");
      } else {
        showPaymentFailedModal("Payment verification failed!");
      }
    } catch (err) {
      console.error(err);
      showPaymentFailedModal("Verification error. Try again.");
    }
  }


  // #7: Initialize Razorpay Checkout
  function initializeRazorpay(order) {
    const options = {
      key: "<%= process.env.RAZORPAY_KEY_ID %>",
      amount: order.amount,
      currency: "INR",
      name: "Venicara Wallet",
      description: "Add Money to Wallet",
      order_id: order.id,
      handler: verifyPayment,
      theme: { color: "#121212" },
      modal: {escape: true,
  ondismiss: async () => {
    try{
            console.log('sukdcgh')
            const response = await fetch('/wallet/api/addMoneyFailed', {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ razorpayId:order.id})
            });
            const result = await response.json();
            showPaymentFailedModal(result.message) 
            
          }catch(error){
            console.log('razorpay ondismiss'+error)
            showPaymentFailedModal(result.message) 
          }
  }
}
    };
    const rzp = new Razorpay(options);
    rzp.open();
    return 
  }

  async function retryPayment(){
    const input = document.getElementById("amount");
    const amountValue = input.value.replace("₹", "").trim();
    if (!validateAmount(amountValue)) return;

    const order = await createRazorpayOrder(amountValue);
    if (order) initializeRazorpay(order);
  }

  // #8: Handle Form Submission
  async function handleFormSubmit(e) {
    e.preventDefault();
    const input = document.getElementById("amount");
    const amountValue = input.value.replace("₹", "").trim();
    if (!validateAmount(amountValue)) return;

    const order = await createRazorpayOrder(amountValue);
    if (order) initializeRazorpay(order);
  }

  // #9: Initialize Everything on Page Load
  function initWalletPage() {
    setupAmountInput();
    setupPresetButtons();
    document
      .getElementById("walletForm")
      .addEventListener("submit", handleFormSubmit);
    document
      .getElementById('retry')
      .addEventListener('click', retryPayment)
  }



  // #10: Start Script
  document.addEventListener("DOMContentLoaded", initWalletPage);
</script>

</body>
</html>
