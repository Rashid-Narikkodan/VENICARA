<%-include('../partials/user/header.ejs')%>

<style>
body {
  background-color: #fff;
  font-family: Arial, sans-serif;
}

.shopping-bag-title {
  font-weight: bold;
  text-align: center;
  margin: 30px 0;
  font-size: 1.8rem;
  letter-spacing: 2px;
}

.card {
  border: none;
}

.item-img {
  max-width: 100px;
}

.order-summary {
  background: #f5f5f5;
  padding: 20px;
  border-radius: 6px;
}

.order-summary h5 {
  font-weight: bold;
  margin-bottom: 20px;
}

.summary-line {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
  font-size: x-small;
}

.apply-btn {
  background: black;
  color: white;
  border: none;
}

.in-stock {
  color: green;
  font-size: 0.9rem;
}

.remove-btn {
  font-size: 0.85rem;
  color: red;
  background: none;
  border: none;
  padding: 0;
  text-decoration: underline;
  cursor: pointer;
}
</style>

<main style="min-height:80vh">
  <div class="shopping-bag-title">SHOPPING BAG</div>
  <div class="px-5">
    <div class="row">
      <% if(items.length>0) { %>
      <div class="col-lg-9">
        <% items.forEach((item, index) => { %>
<div class="card mb-4 p-3 shadow-sm" data-stock="<%= item.variant.stock %>">
  <div class="row align-items-center g-2">
    <div class="col-12 col-sm-4 col-md-2 text-center text-sm-start">
      <a href="/products/<%=item.product._id%>">
        <img src="<%= item.product.images[0].url %>" class="img-fluid item-img rounded-4" alt="<%= item.product.name %>" style="max-height:120px; width:auto;" />
      </a>
    </div>
    <div class="col-12 col-sm-8 col-md-6">
      <h6 class="mb-1"><%= item.product.name %></h6>
      <small><%= item.variant.volume %> ML</small>
      <p class="text-muted qty-text mb-1">Qty : <%=item.quantity%></p>
      <p class="mb-1">
        <span class="text-muted">Arrives in 3–5 business days </span>
        <span id="stock" class="<%= item.variant.stock >= item.quantity ? 'text-success' : 'text-danger' %>">
          <%= item.variant.stock >= item.quantity
              ? 'In stock'
              : item.variant.volume == 0
              ? 'Out of stock'
              : `Out of stock - few item${item.variant.stock > 1 ? 's' : ''} left` %>
        </span>
      </p>
      <small class="text-muted">Free Delivery</small>
    </div>
    <div class="col-12 col-md-4 text-md-end mt-3 mt-md-0">
      <p class="fw-bold mb-2">Rs.<%= item.variant.finalAmount || 0 %></p>
      <div class="d-flex align-items-center justify-content-md-end justify-content-start mb-3 gap-2">
        <button class="btn btn-outline-secondary btn-sm decrease" data-cart-id="<%= item._id %>">-</button>
        <span class="quantity px-2"><%= item.quantity %></span>
        <button class="btn btn-outline-secondary btn-sm increase" data-cart-id="<%= item._id %>" <% if(item.variant.stock === 0) { %> disabled <% } %>>+</button>
      </div>
      <p class="text-muted mb-2 subtotal">Subtotal: Rs.<%= ((item.variant.finalAmount || 0) * item.quantity).toLocaleString() %></p>
        <button type="button" onclick="removeItem('/cart/remove/<%= item._id %>',this)" class="btn btn-dark py-1 px-2" style="font-size: small;">Remove</button>
    </div>
  </div>
</div>
        <% }) %>
      </div>

      <!-- Order Summary -->
      <div class="col-md-3">
        <div class="order-summary shadow-sm">
          <h5>Order Summary</h5>
          <% items.forEach(item => { %>
            <div class="summary-line" data-cart-id="<%= item._id %>" data-name="<%= item.product.name %>" data-volume="<%= item.variant.volume %>">
              <span><%= item.quantity %> × <%= item.product.name %> (<%= item.variant.volume %>ml)</span>
              <span>Rs.<%= ((item.variant.finalAmount || 0) * item.quantity).toLocaleString() %></span>
            </div>
          <% }) %>
          <div class="summary-line text-success">
            <span>Delivery Charges</span><span>Free</span>
          </div>
          <div class="summary-line fw-bold fs-5">
            <span>Total</span><span>Rs.<%= total.toLocaleString() %></span>
          </div>
          <div class="d-flex justify-content-center">
            <a href="/checkout/address" class="btn fw-bold btn-dark text-decoration-none w-100">CONTINUE</a>
          </div>
        </div>
      </div>

      <% } else { %>
        <div class="col-12 text-center my-5">
          <h4 class="mb-3">Your cart is empty</h4>
          <p class="text-muted">Looks like you haven’t added anything to your cart yet.</p>
          <a href="/shop" class="btn btn-dark mt-3">Start Shopping</a>
        </div>
      <% } %>
    </div>
  </div>
</main>

<script>
  document.querySelectorAll(".increase").forEach(btn => {
    btn.addEventListener("click", async () => {
      const cartId = btn.dataset.cartId;
      const card = btn.closest(".card");
      const quantitySpan = card.querySelector(".quantity");
      const decBtn = card.querySelector(".decrease");
      const stock = Number(card.dataset.stock);

      try {
        const res = await fetch(`/cart/increase/${cartId}`, { method: "PATCH" });
        const data = await res.json();

        if (data.success) {
          quantitySpan.textContent = data.newQuantity;
          decBtn.disabled = data.newQuantity <= 1;
          const maxQty = Math.min(5, stock);
          btn.disabled = data.newQuantity >= maxQty;

          card.querySelector(".qty-text").textContent = `Qty : ${data.newQuantity}`;
          card.querySelector(".subtotal").textContent = `Subtotal: Rs.${data.lineTotal.toLocaleString()}`;

          // Update summary line
          const summaryLine = document.querySelector(`.summary-line[data-cart-id="${cartId}"]`);
          if(summaryLine){
            const spans = summaryLine.querySelectorAll("span");
            spans[0].textContent = `${data.newQuantity} × ${summaryLine.dataset.name} (${summaryLine.dataset.volume}ml)`;
            spans[1].textContent = `Rs.${data.lineTotal.toLocaleString()}`;
          }

          document.querySelector(".summary-line.fw-bold.fs-5 span:last-child").textContent = `Rs.${data.total.toLocaleString()}`;
        } else {
          shoeAlert('error',data.message);
        }
      } catch(err) { console.error(err); }
    });
  });

  document.querySelectorAll(".decrease").forEach(btn => {
    btn.addEventListener("click", async () => {
      const cartId = btn.dataset.cartId;
      const card = btn.closest(".card");
      const quantitySpan = card.querySelector(".quantity");
      const incBtn = card.querySelector(".increase");
      const stock = Number(card.dataset.stock);

      try {
        const res = await fetch(`/cart/decrease/${cartId}`, { method: "PATCH" });
        const data = await res.json();

        if (data.success) {
          quantitySpan.textContent = data.newQuantity;
          btn.disabled = data.newQuantity <= 1;
          incBtn.disabled = data.newQuantity >= Math.min(5, stock);

          card.querySelector(".qty-text").textContent = `Qty : ${data.newQuantity}`;
          card.querySelector(".subtotal").textContent = `Subtotal: Rs.${data.lineTotal.toLocaleString()}`;

          // Update summary line
          const summaryLine = document.querySelector(`.summary-line[data-cart-id="${cartId}"]`);
          if(summaryLine){
            const spans = summaryLine.querySelectorAll("span");
            spans[0].textContent = `${data.newQuantity} × ${summaryLine.dataset.name} (${summaryLine.dataset.volume}ml)`;
            spans[1].textContent = `Rs.${data.lineTotal.toLocaleString()}`;
          }

          document.querySelector(".summary-line.fw-bold.fs-5 span:last-child").textContent = `Rs.${data.total.toLocaleString()}`;
          console.log(data.stock)
          console.log(data.newQuantity)
          if(Number(data.stock)>=Number(data.newQuantity)){
            document.getElementById('stock').innerHTML = 'In Stock'
            document.getElementById('stock').classList.remove('text-danger', 'text-success')
            document.getElementById('stock').classList.add('text-success')
          }else if(data.stock == 0){
            document.getElementById('stock').innerHTML = `Out of Stock`
            document.getElementById('stock').classList.remove('text-danger', 'text-success')
            document.getElementById('stock').classList.add('text-danger')
            
          }
          else{
            document.getElementById('stock').innerHTML = `Out of Stock - few items left`
            document.getElementById('stock').classList.remove('text-danger', 'text-success')
            document.getElementById('stock').classList.add('text-danger')
          }
          
        }
      } catch(err){ console.error(err); }
    });
  });

  async function removeItem(url,btn){
    try{

      const res = await fetch(url,{
        method:'DELETE',
    })
    const data = await res.json()
    if(data.status){
      showAlert('success',data.message)
      const card = btn.closest('.card')
      if(card) card.remove()
      updateCartCount()
      const have = document.getElementsByClassName('card')
    if(!have||!have.length||have.length<1) window.location.replace('/cart')
    }else{
      showAlert('error',data.message)
    }
  }catch(error){
    console.log(error)
  }
  }
</script>

<%-include('../partials/user/footer.ejs')%>
